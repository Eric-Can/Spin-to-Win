{"id":"node_modules/styleq/dist/styleq.js","dependencies":[{"name":"C:\\Users\\Eric\\Desktop\\Personal\\CS Research\\Personal Programming Projects\\Spin to Win\\web\\package.json","includedInParent":true,"mtime":1671152958758},{"name":"C:\\Users\\Eric\\Desktop\\Personal\\CS Research\\Personal Programming Projects\\Spin to Win\\web\\node_modules\\styleq\\package.json","includedInParent":true,"mtime":1664642994591}],"generated":{"js":"/**\n * Copyright (c) Nicolas Gallagher\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.styleq = void 0;\nvar cache = new WeakMap();\nvar compiledKey = '$$css';\n\nfunction createStyleq(options) {\n  var disableCache;\n  var disableMix;\n  var transform;\n\n  if (options != null) {\n    disableCache = options.disableCache === true;\n    disableMix = options.disableMix === true;\n    transform = options.transform;\n  }\n\n  return function styleq() {\n    // Keep track of property commits to the className\n    var definedProperties = []; // The className and inline style to build up\n\n    var className = '';\n    var inlineStyle = null; // The current position in the cache graph\n\n    var nextCache = disableCache ? null : cache; // This way of creating an array from arguments is fastest\n\n    var styles = new Array(arguments.length);\n\n    for (var i = 0; i < arguments.length; i++) {\n      styles[i] = arguments[i];\n    } // Iterate over styles from last to first\n\n\n    while (styles.length > 0) {\n      var possibleStyle = styles.pop(); // Skip empty items\n\n      if (possibleStyle == null || possibleStyle === false) {\n        continue;\n      } // Push nested styles back onto the stack to be processed\n\n\n      if (Array.isArray(possibleStyle)) {\n        for (var _i = 0; _i < possibleStyle.length; _i++) {\n          styles.push(possibleStyle[_i]);\n        }\n\n        continue;\n      } // Process an individual style object\n\n\n      var style = transform != null ? transform(possibleStyle) : possibleStyle;\n\n      if (style[compiledKey]) {\n        // Build up the class names defined by this object\n        var classNameChunk = ''; // Check the cache to see if we've already done this work\n\n        if (nextCache != null && nextCache.has(style)) {\n          // Cache: read\n          var cacheEntry = nextCache.get(style);\n\n          if (cacheEntry != null) {\n            classNameChunk = cacheEntry[0]; // $FlowIgnore\n\n            definedProperties.push.apply(definedProperties, cacheEntry[1]);\n            nextCache = cacheEntry[2];\n          }\n        } // Update the chunks with data from this object\n        else {\n          // The properties defined by this object\n          var definedPropertiesChunk = [];\n\n          for (var prop in style) {\n            var value = style[prop];\n            if (prop === compiledKey) continue; // Each property value is used as an HTML class name\n            // { 'debug.string': 'debug.string', opacity: 's-jskmnoqp' }\n\n            if (typeof value === 'string') {\n              // Only add to chunks if this property hasn't already been seen\n              if (!definedProperties.includes(prop)) {\n                classNameChunk += classNameChunk ? ' ' + value : value;\n                definedProperties.push(prop);\n\n                if (nextCache != null) {\n                  definedPropertiesChunk.push(prop);\n                }\n              }\n            } // If we encounter a value that isn't a string\n            else {\n              console.error(\"styleq: \".concat(prop, \" typeof \").concat(value, \" is not \\\"string\\\".\"));\n            }\n          } // Cache: write\n\n\n          if (nextCache != null) {\n            // Create the next WeakMap for this sequence of styles\n            var weakMap = new WeakMap();\n            nextCache.set(style, [classNameChunk, definedPropertiesChunk, weakMap]);\n            nextCache = weakMap;\n          }\n        } // Order of classes in chunks matches property-iteration order of style\n        // object. Order of chunks matches passed order of styles from first to\n        // last (which we iterate over in reverse).\n\n\n        if (classNameChunk) {\n          className = className ? classNameChunk + ' ' + className : classNameChunk;\n        }\n      } // ----- DYNAMIC: Process inline style object -----\n      else {\n        if (disableMix) {\n          if (inlineStyle == null) {\n            inlineStyle = {};\n          }\n\n          inlineStyle = Object.assign({}, style, inlineStyle);\n        } else {\n          var subStyle = null;\n\n          for (var _prop in style) {\n            var _value = style[_prop];\n\n            if (_value !== undefined) {\n              if (!definedProperties.includes(_prop)) {\n                if (_value != null) {\n                  if (inlineStyle == null) {\n                    inlineStyle = {};\n                  }\n\n                  if (subStyle == null) {\n                    subStyle = {};\n                  }\n\n                  subStyle[_prop] = _value;\n                }\n\n                definedProperties.push(_prop); // Cache is unnecessary overhead if results can't be reused.\n\n                nextCache = null;\n              }\n            }\n          }\n\n          if (subStyle != null) {\n            inlineStyle = Object.assign(subStyle, inlineStyle);\n          }\n        }\n      }\n    }\n\n    var styleProps = [className, inlineStyle];\n    return styleProps;\n  };\n}\n\nvar styleq = createStyleq();\nexports.styleq = styleq;\nstyleq.factory = createStyleq;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/styleq/dist/styleq.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/styleq/dist/styleq.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}}],"sources":{"node_modules/styleq/dist/styleq.js":"/**\n * Copyright (c) Nicolas Gallagher\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.styleq = void 0;\nvar cache = new WeakMap();\nvar compiledKey = '$$css';\n\nfunction createStyleq(options) {\n  var disableCache;\n  var disableMix;\n  var transform;\n\n  if (options != null) {\n    disableCache = options.disableCache === true;\n    disableMix = options.disableMix === true;\n    transform = options.transform;\n  }\n\n  return function styleq() {\n    // Keep track of property commits to the className\n    var definedProperties = []; // The className and inline style to build up\n\n    var className = '';\n    var inlineStyle = null; // The current position in the cache graph\n\n    var nextCache = disableCache ? null : cache; // This way of creating an array from arguments is fastest\n\n    var styles = new Array(arguments.length);\n\n    for (var i = 0; i < arguments.length; i++) {\n      styles[i] = arguments[i];\n    } // Iterate over styles from last to first\n\n\n    while (styles.length > 0) {\n      var possibleStyle = styles.pop(); // Skip empty items\n\n      if (possibleStyle == null || possibleStyle === false) {\n        continue;\n      } // Push nested styles back onto the stack to be processed\n\n\n      if (Array.isArray(possibleStyle)) {\n        for (var _i = 0; _i < possibleStyle.length; _i++) {\n          styles.push(possibleStyle[_i]);\n        }\n\n        continue;\n      } // Process an individual style object\n\n\n      var style = transform != null ? transform(possibleStyle) : possibleStyle;\n\n      if (style[compiledKey]) {\n        // Build up the class names defined by this object\n        var classNameChunk = ''; // Check the cache to see if we've already done this work\n\n        if (nextCache != null && nextCache.has(style)) {\n          // Cache: read\n          var cacheEntry = nextCache.get(style);\n\n          if (cacheEntry != null) {\n            classNameChunk = cacheEntry[0]; // $FlowIgnore\n\n            definedProperties.push.apply(definedProperties, cacheEntry[1]);\n            nextCache = cacheEntry[2];\n          }\n        } // Update the chunks with data from this object\n        else {\n          // The properties defined by this object\n          var definedPropertiesChunk = [];\n\n          for (var prop in style) {\n            var value = style[prop];\n            if (prop === compiledKey) continue; // Each property value is used as an HTML class name\n            // { 'debug.string': 'debug.string', opacity: 's-jskmnoqp' }\n\n            if (typeof value === 'string') {\n              // Only add to chunks if this property hasn't already been seen\n              if (!definedProperties.includes(prop)) {\n                classNameChunk += classNameChunk ? ' ' + value : value;\n                definedProperties.push(prop);\n\n                if (nextCache != null) {\n                  definedPropertiesChunk.push(prop);\n                }\n              }\n            } // If we encounter a value that isn't a string\n            else {\n              console.error(\"styleq: \".concat(prop, \" typeof \").concat(value, \" is not \\\"string\\\".\"));\n            }\n          } // Cache: write\n\n\n          if (nextCache != null) {\n            // Create the next WeakMap for this sequence of styles\n            var weakMap = new WeakMap();\n            nextCache.set(style, [classNameChunk, definedPropertiesChunk, weakMap]);\n            nextCache = weakMap;\n          }\n        } // Order of classes in chunks matches property-iteration order of style\n        // object. Order of chunks matches passed order of styles from first to\n        // last (which we iterate over in reverse).\n\n\n        if (classNameChunk) {\n          className = className ? classNameChunk + ' ' + className : classNameChunk;\n        }\n      } // ----- DYNAMIC: Process inline style object -----\n      else {\n        if (disableMix) {\n          if (inlineStyle == null) {\n            inlineStyle = {};\n          }\n\n          inlineStyle = Object.assign({}, style, inlineStyle);\n        } else {\n          var subStyle = null;\n\n          for (var _prop in style) {\n            var _value = style[_prop];\n\n            if (_value !== undefined) {\n              if (!definedProperties.includes(_prop)) {\n                if (_value != null) {\n                  if (inlineStyle == null) {\n                    inlineStyle = {};\n                  }\n\n                  if (subStyle == null) {\n                    subStyle = {};\n                  }\n\n                  subStyle[_prop] = _value;\n                }\n\n                definedProperties.push(_prop); // Cache is unnecessary overhead if results can't be reused.\n\n                nextCache = null;\n              }\n            }\n          }\n\n          if (subStyle != null) {\n            inlineStyle = Object.assign(subStyle, inlineStyle);\n          }\n        }\n      }\n    }\n\n    var styleProps = [className, inlineStyle];\n    return styleProps;\n  };\n}\n\nvar styleq = createStyleq();\nexports.styleq = styleq;\nstyleq.factory = createStyleq;"},"lineCount":168}},"error":null,"hash":"8dbfdbdca46a536f0f48d6dbeb8cc511","cacheData":{"env":{}}}